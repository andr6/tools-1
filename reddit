#!/usr/bin/python
'''
Created on Aug 28, 2010
A reddit client

@author: kbandla
'''
import sys
import json
import time
import httplib
import argparse

try:
    from termcolor import colored
    color = True
except Exception,e:
    color = False

URL = 'http://www.reddit.com/r/%s/.json'
CLICK_URL = 'http://www.reddit.com/r/%s'
SUBREDDITS = ['programming', 'linux']
TIME_DIFF = 86400

def getJSON(subreddit):
    conn = httplib.HTTPConnection('www.reddit.com' , timeout=2)
    headers = ({'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.172 Safari/537.22',
                'Accept-Language':'en-US,en;q=0.8',
                'Accept-Charset':'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
                                })
    conn.request('GET', '/r/%s/.json'%(subreddit), headers=headers)
    try:
        response = conn.getresponse()
    except Exception,e:
        print 'Error : %s'%e
        return False
    if response.status == 200:
        data = response.read()
        data = json.loads( data )
        conn.close()
        return data
    print 'Error getting JSON. HTTP %s '%(response.status)
    return False

def reddit(subreddits, days=1, verbose=False):
    # clear console
    print chr(27) + "[2J"

    for subreddit in subreddits:
        url = URL%( subreddit )
        data = getJSON( subreddit )
        if not data:
            continue

        if color:
            print colored(subreddit, 'red'), CLICK_URL%subreddit
        else:
            print subreddit, CLICK_URL%subreddit

        if data.has_key('data'):
            if data['data'].has_key('children'):
                for post in data['data']['children']:
                    if time.time() - float(post['data']['created']) < TIME_DIFF*days:
                        title = post['data']['title']
                        comments = post['data']['permalink']
                        link = post['data']['url']
                        if color:
                            print colored(title, 'white'), colored(link, 'green')
                        else:
                            print title, link
                print
        else:
            print 'Data error', data

def main():
    parser = argparse.ArgumentParser(description='REDDIT')
    parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', default=False, help='Verbose mode')
    parser.add_argument('-d', '--days', dest='days', action='store', default=1, help='Number of days')
    parser.add_argument('subreddits', nargs='*', default=SUBREDDITS)
    args = parser.parse_args()
    if args.verbose:
        print 'Found %s subreddits to get'%(len(args.subreddits))

    reddit( args.subreddits, args.days, args.verbose )
if __name__ == "__main__":
    main()
